import "fluential:audio-processor";
import "fluential:virtual-studio-technology";

class GainProcessor extends AudioProcessor {

    private var gain: float = 1.0;

    public override func On-AudioProcess(required Input: float[], required Output: float[], required NumberOfSamples: int): void {
        for(var i: int = 0; i < NumberOfSamples; i++) {
            Output[i] = Input[i] * this::gain;
        }
    }

    public func Set-Gain(required Value: float): void {
        this::gain = Value;
    }

    public func Get-Gain(required Value: float): float {
        return this::gain;
    }
}

class GainUI extends VSTUserInterface {

    public declare var Processor: GainProcessor;

    override func On-CreateUI() {

        var self: GainUI = this;

        var gainSlider: VSTUserInterfaceSliderElement = New-Instance VSTUserInterfaceSliderElement
            -Label "Gain"
            -MinimumValue 0.0
            -MaximumValue 2.0
            -InitialValue 1.0;

        gainSlider::Set-EventListener "value-changed" -Callback func(Value: float) {
            self::Processor::Set-Gain -Value Value;
        }

        this::Add-Element gainSlider;
    }

    func Set-Processor(Processor: GainProcessor): void {
        this::Processor = Processor;
    }
}

func<thread> Main(): void {

    var processor = New-Instance GainProcessor;
    var ui = New-Instance GainUI;

    ui::Set-Processor processor;

    Register-Plugin -Name "Fluent Gain Plugin" -Processor processor -UserInterface ui;
}